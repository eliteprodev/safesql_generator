# Code generated by sqlc. DO NOT EDIT.
from typing import AsyncIterator, Awaitable, Iterator, Optional, overload

import sqlc_runtime as sqlc

from jets import models


COUNT_PILOTS = """-- name: count_pilots :one
SELECT COUNT(*) FROM pilots
"""


DELETE_PILOT = """-- name: delete_pilot :exec
DELETE FROM pilots WHERE id = $1
"""


LIST_PILOTS = """-- name: list_pilots :many
SELECT id, name FROM pilots LIMIT 5
"""


@overload
def count_pilots(conn: sqlc.Connection) -> Optional[int]:
    pass


@overload
def count_pilots(conn: sqlc.AsyncConnection) -> Awaitable[Optional[int]]:
    pass


def count_pilots(conn: sqlc.GenericConnection) -> sqlc.ReturnType[Optional[int]]:
    return conn.execute_one(COUNT_PILOTS)


@overload
def delete_pilot(conn: sqlc.Connection, id: int) -> None:
    pass


@overload
def delete_pilot(conn: sqlc.AsyncConnection, id: int) -> Awaitable[None]:
    pass


def delete_pilot(conn: sqlc.GenericConnection, id: int) -> sqlc.ReturnType[None]:
    return conn.execute_none(DELETE_PILOT, id)


@overload
def list_pilots(conn: sqlc.Connection) -> Iterator[models.Pilot]:
    pass


@overload
def list_pilots(conn: sqlc.AsyncConnection) -> AsyncIterator[models.Pilot]:
    pass


def list_pilots(conn: sqlc.GenericConnection) -> sqlc.IteratorReturn[models.Pilot]:
    return conn.execute_many_model(models.Pilot, LIST_PILOTS)


