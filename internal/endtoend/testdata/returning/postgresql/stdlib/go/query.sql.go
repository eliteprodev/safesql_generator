// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: query.sql

package querytest

import (
	"context"
	"database/sql"
)

const deleteUser = `-- name: DeleteUser :one
DELETE FROM users
  WHERE name = $1
  RETURNING id
`

func (q *Queries) DeleteUser(ctx context.Context, name sql.NullString) (int32, error) {
	row := q.db.QueryRowContext(ctx, deleteUser, name)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const insertUser = `-- name: InsertUser :one
INSERT INTO users (name) VALUES ($1) RETURNING id
`

func (q *Queries) InsertUser(ctx context.Context, name sql.NullString) (int32, error) {
	row := q.db.QueryRowContext(ctx, insertUser, name)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const updateUser = `-- name: UpdateUser :one
UPDATE users SET name = $1
  RETURNING id
`

func (q *Queries) UpdateUser(ctx context.Context, name sql.NullString) (int32, error) {
	row := q.db.QueryRowContext(ctx, updateUser, name)
	var id int32
	err := row.Scan(&id)
	return id, err
}
