// Code generated by sqlc. DO NOT EDIT.
// source: query.sql

package querytest

import (
	"context"
)

const selectUserArg = `-- name: SelectUserArg :many
select first_name from users where ? = id or ? = 0
`

type SelectUserArgParams struct {
	ID   int
	ID_2 int
}

func (q *Queries) SelectUserArg(ctx context.Context, arg SelectUserArgParams) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, selectUserArg, arg.ID, arg.ID_2)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var first_name string
		if err := rows.Scan(&first_name); err != nil {
			return nil, err
		}
		items = append(items, first_name)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
