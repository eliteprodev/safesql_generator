// Code generated by sqlc. DO NOT EDIT.

package querytest

import (
	"fmt"
)

type FirstNameType string

const (
	john   FirstNameType = "john"
	albert FirstNameType = "albert"
)

func (e *FirstNameType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = FirstNameType(s)
	case string:
		*e = FirstNameType(s)
	default:
		return fmt.Errorf("unsupported scan type for FirstNameType: %T", src)
	}
	return nil
}

type UserIDType string

const (
	one UserIDType = "one"
	two UserIDType = "two"
)

func (e *UserIDType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UserIDType(s)
	case string:
		*e = UserIDType(s)
	default:
		return fmt.Errorf("unsupported scan type for UserIDType: %T", src)
	}
	return nil
}

type LastNameType string

const (
	smith LastNameType = "smith"
	frank LastNameType = "frank"
)

func (e *LastNameType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = LastNameType(s)
	case string:
		*e = LastNameType(s)
	default:
		return fmt.Errorf("unsupported scan type for LastNameType: %T", src)
	}
	return nil
}

type Example struct {
	FirstName FirstNameType
	UserID    UserIDType
	LastName  LastNameType
}
