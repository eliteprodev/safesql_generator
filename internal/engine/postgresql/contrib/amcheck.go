// Code generated by sqlc-pg-gen. DO NOT EDIT.

package contrib

import (
	"github.com/kyleconroy/sqlc/internal/sql/ast"
	"github.com/kyleconroy/sqlc/internal/sql/catalog"
)

func Amcheck() *catalog.Schema {
	s := &catalog.Schema{Name: "pg_catalog"}
	s.Funcs = []*catalog.Function{
		{
			Name: "bt_index_check",
			Args: []*catalog.Argument{
				{
					Name: "index",
					Type: &ast.TypeName{Name: "regclass"},
				},
			},
			ReturnType: &ast.TypeName{Name: "void"},
		},
		{
			Name: "bt_index_check",
			Args: []*catalog.Argument{
				{
					Name: "index",
					Type: &ast.TypeName{Name: "regclass"},
				},
				{
					Name: "heapallindexed",
					Type: &ast.TypeName{Name: "boolean"},
				},
			},
			ReturnType: &ast.TypeName{Name: "void"},
		},
		{
			Name: "bt_index_parent_check",
			Args: []*catalog.Argument{
				{
					Name: "index",
					Type: &ast.TypeName{Name: "regclass"},
				},
			},
			ReturnType: &ast.TypeName{Name: "void"},
		},
		{
			Name: "bt_index_parent_check",
			Args: []*catalog.Argument{
				{
					Name: "index",
					Type: &ast.TypeName{Name: "regclass"},
				},
				{
					Name: "heapallindexed",
					Type: &ast.TypeName{Name: "boolean"},
				},
			},
			ReturnType: &ast.TypeName{Name: "void"},
		},
		{
			Name: "bt_index_parent_check",
			Args: []*catalog.Argument{
				{
					Name: "index",
					Type: &ast.TypeName{Name: "regclass"},
				},
				{
					Name: "heapallindexed",
					Type: &ast.TypeName{Name: "boolean"},
				},
				{
					Name: "rootdescend",
					Type: &ast.TypeName{Name: "boolean"},
				},
			},
			ReturnType: &ast.TypeName{Name: "void"},
		},
	}
	return s
}
